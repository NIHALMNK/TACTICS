<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin/dashboard.css">
    <!-- <style>
        /* Enhanced Card Layouts */
.dashboard-card {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin: 0.5rem 0;
}

/* Stats Card Refinements */
.stats-card {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1rem;
    align-items: center;
    padding: 1.5rem;
}

.stats-icon {
    grid-row: span 2;
    margin-bottom: 0;
    width: 56px;
    height: 56px;
}

.stats-value {
    margin-bottom: 0.25rem;
    line-height: 1.2;
}

/* Filter Section Improvements */
.data-filters {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 1.5rem;
    padding: 1.25rem;
    align-items: center;
}

.filter-input {
    min-width: 150px;
    height: 40px;
}

/* Table Enhancements */
.data-table {
    margin-top: 2rem;
}

.data-table table {
    border-spacing: 0 0.5rem;
    margin-top: -0.5rem;
}

.data-table th {
    padding: 1rem 1.5rem;
    white-space: nowrap;
}

.data-table td {
    padding: 1.25rem 1.5rem;
    vertical-align: middle;
}

.data-table tbody tr:last-child td {
    border-bottom: none;
}

/* Chart Container Refinements */
.chart-container {
    padding: 1rem 0.5rem;
    margin: 1.5rem 0;
}

/* Export Button Improvements */
.export-btn {
    height: 40px;
    min-width: 120px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    font-weight: 500;
}

/* Responsive Improvements */
@media (max-width: 768px) {
    .data-filters {
        grid-template-columns: 1fr;
    }
    
    .stats-card {
        padding: 1.25rem;
    }
    
    .stats-icon {
        width: 48px;
        height: 48px;
    }
}

@media (min-width: 1024px) {
    .stats-card {
        margin: 0;
    }
    
    .dashboard-card {
        margin: 0;
    }
}
    </style> -->
</head>
<body>
     <!-- Include Sidebar -->
  <%- include('./layout/asidebar.ejs') %>

    <main class="main-content">
        <div class="container-fluid py-4">
            
            <!-- Stats Row -->
            <div class="row g-3 mb-4">
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="stats-card">
                        <div class="stats-icon">
                            <i class="fas fa-shopping-cart"></i>
                        </div>
                        <div class="stats-value"><%= stats.totalOrders %></div>
                        <div class="stats-label">Total Orders</div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="stats-card">
                        <div class="stats-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div class="stats-value">$<%= stats.totalRevenue.toLocaleString() %></div>
                        <div class="stats-label">Total Revenue</div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="stats-card">
                        <div class="stats-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="stats-value">$<%= stats.todayRevenue.toLocaleString() %></div>
                        <div class="stats-label">Today's Revenue</div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="stats-card">
                        <div class="stats-icon">
                            <i class="fas fa-shopping-bag"></i>
                        </div>
                        <div class="stats-value"><%= stats.todayOrders %></div>
                        <div class="stats-label">Today's Orders</div>
                    </div>
                </div>
            </div>

            <!-- Sales Report Section -->
            <div class="row g-3 mb-4">
                <div class="col-12">
                    <div class="dashboard-card">
                        <div class="data-filters d-flex flex-wrap gap-3 align-items-center justify-content-between mb-4">
                            <div class="d-flex gap-3 flex-wrap">
                                <select class="filter-input" id="period-select">
                                    <option value="">Custom Range</option>
                                    <option value="daily">Daily</option>
                                    <option value="weekly">Weekly</option>
                                    <option value="monthly">Monthly</option>
                                    <option value="yearly">Yearly</option>
                                </select>
                                <input type="date" class="filter-input" id="start-date">
                                <input type="date" class="filter-input" id="end-date">
                                <button class="btn btn-primary" onclick="generateReport()">Generate Report</button>
                            </div>
                            <div class="d-flex gap-3 flex-wrap">
                                <button class="export-btn" onclick="downloadReport('pdf')">
                                    <i class="fas fa-file-pdf me-2"></i>Export PDF
                                </button>
                                <button class="export-btn" onclick="downloadReport('excel')">
                                    <i class="fas fa-file-excel me-2"></i>Export Excel
                                </button>
                            </div>
                        </div>
                        <div class="chart-container">
                            <canvas id="salesChart"></canvas>
                        </div>
                        <div class="data-table mt-4" id="sales-data">
                            <!-- Sales data will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
           
        </div>
    </main>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script>
        let salesChart;

        async function generateReport() {
            const period = document.getElementById('period-select').value;
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;

            const params = new URLSearchParams();
            if (period) {
                params.append('period', period);
            } else {
                params.append('startDate', startDate);
                params.append('endDate', endDate);
            }

            try {
                const response = await fetch(`/admin/sales-report?${params}`);
                const data = await response.json();
                updateChart(data);
                updateTable(data);
            } catch (error) {
                console.error('Error generating report:', error);
            }
        }

        function updateChart(data) {
            const ctx = document.getElementById('salesChart').getContext('2d');
            
            if (salesChart) {
                salesChart.destroy();
            }

            salesChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: data.salesData.map(item => item._id),
                    datasets: [{
                        label: 'Sales',
                        data: data.salesData.map(item => item.totalSales),
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function updateTable(data) {
            const tableHtml = `
                <h5 class="mb-3">Sales Summary</h5>
                <table class="table table-borderless mb-0">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Orders</th>
                            <th>Sales</th>
                            <th>Discount</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data.salesData.map(item => `
                            <tr>
                                <td>${item._id}</td>
                                <td>${item.ordersCount}</td>
                                <td>$${item.totalSales.toFixed(2)}</td>
                                <td>$${item.discountTotal.toFixed(2)}</td>
                            </tr>
                        `).join('')}
                        <tr class="table-info">
                            <td><strong>Total</strong></td>
                            <td><strong>${data.summary.totalOrders}</strong></td>
                            <td><strong>$${data.summary.totalSales.toFixed(2)}</strong></td>
                            <td><strong>$${data.summary.totalDiscount.toFixed(2)}</strong></td>
                        </tr>
                    </tbody>
                </table>
            `;
            document.getElementById('sales-data').innerHTML = tableHtml;
        }

        async function downloadReport(format) {
            const period = document.getElementById('period-select').value;
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;

            const params = new URLSearchParams();
            params.append('format', format);
            if (period) {
                params.append('period', period);
            } else {
                params.append('startDate', startDate);
                params.append('endDate', endDate);
            }

            window.location.href = `/admin/sales-report/download?${params}`;
        }

        // Initialize with daily report on page load
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('period-select').value = 'daily';
            generateReport();
        });

        // Handle period select change
        document.getElementById('period-select').addEventListener('change', (e) => {
            const customDateInputs = document.querySelectorAll('input[type="date"]');
            if (e.target.value === '') {
                customDateInputs.forEach(input => input.disabled = false);
            } else {
                customDateInputs.forEach(input => input.disabled = true);
            }
        });
    </script>
</body>
</html>