
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* General Styling */
	body {
		font-family: 'Poppins', sans-serif;
		background-color: #f9f9f9;
		margin: 0;
		padding: 0;
	}

	.container {
		max-width: 1440px;
		margin: 0 auto;
		padding: 20px;
	}

	.cart-section {
		background-color: #ffffff;
		padding: 20px;
		border-radius: 8px;
	}

	.cart-container {
		display: flex;
		justify-content: space-between;
		gap: 20px;
	}

	/* Offer Section */
	.offer {
		background: rgba(58, 162, 159, 0.1);
		border: 1px solid #3aa39f;
		border-radius: 4px;
		padding: 15px;
		display: flex;
		align-items: center;
		gap: 12px;
	}

	.offer-icon {
		width: 24px;
		height: 24px;
		border: 2px solid #3aa39f;
		border-radius: 50%;
	}

	.offer-text {
		color: #17183b;
		font-size: 16px;
		font-weight: 400;
	}

	/* Order Summary */
	.order-summary {
		background-color: transparent;
	}

	.zzz {
		flex: 0 0 30%;
		background-color: #ffffff;
		padding: 20px;
		border: 1px solid #d1d1d8;
		border-radius: 8px;
	}

	.section-title {
		font-size: 24px;
		font-weight: 700;
		color: #17183b;
	}

	.details .detail-item {
		display: flex;
		justify-content: space-between;
		padding: 8px 0;
	}

	.total-section .total-item {
		display: flex;
		justify-content: space-between;
		font-size: 16px;
		font-weight: 600;
		margin-bottom: 2%;
	}

	

	.checkout-btn {
		background-color: #3aa39f;
		color: white;
		font-weight: 600;
		padding: 12px;
		border: none;
		border-radius: 4px;
		width: 100%;
		cursor: pointer;
	}

	/* Product List */
	.product-list .product-item {
		display: flex;
		align-items: center;
		padding: 16px;
		background: #fff;
		border: 1px solid #d1d1d8;
		border-radius: 4px;
		margin-bottom: 16px;
	}

	.product-img {
		width: 24%;
		/* height: 168px; */
	}

	.product-details {
		flex: 1;
		padding-left: 16px;
	}

	.product-name {
		font-size: 20px;
		font-weight: 600;
		color: #17183b;
	}

	.product-color span {
		color: #a2a3b1;
	}

	.quantity-control {
		display: flex;
		align-items: center;
	}

	.quantity {
		font-size: 1.25rem;
		font-weight: bold;
	}

	.btn-decrease,
	.btn-increase {
		width: 40px;
		height: 40px;
		font-size: 1.5rem;
	}

	.remove-btn {
		font-size: 1.1rem;
	}

	.product-price {
		font-size: 20px;
		font-weight: 600;
		color: #17183b;
	}

	

	.prevnext {
		padding: 10px 30px;
	}
	/* Add these media queries after your existing styles */

/* Small devices (320px) */
@media screen and (max-width: 320px) {
    .container {
        padding: 10px;
    }
    
    .cart-container {
        flex-direction: column;
    }
    
    .product-item {
        flex-direction: column;
        text-align: center;
    }
    
    .product-img {
        width: 80%;
        margin-bottom: 15px;
    }
    
    .product-details {
        padding: 0;
    }
    
    .product-actions {
        justify-content: center;
    }
    
    .product-price {
        margin-top: 15px;
    }
    
    .prevnext {
        padding: 8px 15px;
    }
    
    .section-title {
        font-size: 20px;
    }
}

/* Medium devices (375px) */
@media screen and (max-width: 375px) {
    .product-img {
        width: 70%;
    }
    
    .cart-section {
        padding: 15px;
    }
}

/* Large devices (425px) */
@media screen and (max-width: 425px) {
    .product-name {
        font-size: 18px;
    }
    
    .quantity-control {
        gap: 10px;
    }
    
    .btn-decrease,
    .btn-increase {
        width: 35px;
        height: 35px;
    }
}

/* Tablet (768px) */
@media screen and (max-width: 768px) {
    .cart-container {
        flex-direction: column;
    }
    
    .zzz {
        width: 100%;
    }
    
    .product-img {
        width: 40%;
    }
}

/* Laptop (1024px) */
@media screen and (max-width: 1024px) {
    .container {
        max-width: 95%;
    }
    
    .product-item {
        padding: 12px;
    }
    
    .product-img {
        width: 30%;
    }
}

/* Laptop L (1440px) */
@media screen and (max-width: 1440px) {
    .container {
        max-width: 1200px;
    }
}

/* 4K (2560px) */
@media screen and (min-width: 2560px) {
    .container {
        max-width: 1800px;
    }
    
    .product-name {
        font-size: 24px;
    }
    
    .product-price {
        font-size: 24px;
    }
    
    .section-title {
        font-size: 32px;
    }
    
    .btn-decrease,
    .btn-increase {
        width: 50px;
        height: 50px;
    }
    
    .offer-text {
        font-size: 20px;
    }
}
    </style>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
</head>
<body>

     <!-------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
 <%- include('./layout/NAV.ejs') %>
 <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
 
	<!-- Content page -->
	<section class="cart-section bg-light p-t-75 p-b-120">
		<div class="container">
			<!-- Cart Container -->
			<div class="cart-container">
				<div class="d-block w-100">
					<!-- Product List -->
					<div class="product-list">
						<% if (cart && cart.items.length> 0) { %> <% cart.items.forEach((item)=> { %> <div class="product-item">
							<img src="<%= item.productId.images[0] %>" alt="Product Image" class="product-img" />
							<div class="product-details">
								<h3 class="product-name">
									<%= item.productId.name %>
								</h3>
								<p class="product-size"><span>Size :</span>
									<b><%= item.size %></b>
								</p>
								<p class="product-total">
									<span>total available stock :</span> <b>
									<%= item.productId.stockManagement.find(stock=> stock.size === item.size).quantity %>
								</b>
								</p>
								
								<div class="product-actions d-flex  pt-3">
									<div class="quantity-control d-flex align-items-center" data-item-id="<%= item._id %>">
										<button class="btn btn-primary btn-decrease">-</button>
										<span class="quantity mx-3">
											<%= item.quantity %>
										</span>
										<button class="btn btn-primary btn-increase">+</button>
									</div>
									<button class="btn remove-btn ml-4"  data-item-id="<%= item._id %>">
										<i class="fas fa-trash text-danger"></i>
									</button>
									
								</div>
							</div>
							<div class="product-price">Rs. <%= item.productId.offerPrice %>
							</div>
						</div>
						<% }) %>
						<% } else { %>
						<p>No items in the cart.</p>
						<a href="/shop"><button type="button" class="btn btn-success">go to shop</button></a>
						<% } %>
					</div>
					<!-- Pagination -->
					<div class="pagination-controls justify-content-center d-flex">
						<% if (currentPage> 1) { %> <a href="?page=<%= currentPage - 1 %>" class="btn btn-secondary prevnext">Prev</a>
						<% } %> <span class="align-content-center pr-5 pl-5">Page <%= currentPage %> of <%= totalPages %></span>
						<% if (currentPage < totalPages) { %> <a href="?page=<%= currentPage + 1 %>" class="btn btn-secondary prevnext">Next</a>
						<% } %>
					</div>
				</div>
				<!-- Order Summary -->
				<div class="order-summary">
					<div class="zzz mb-3">
						<h2 class="section-title">Order Summary</h2>
						<hr>
						<div class="details">
							<div class="detail-item">
								<span>Price</span>
								<span>Rs. <%= mrp %></span>
							</div>
							<div class="detail-item">
								<span>Discount</span>
								<span class="text-success">- Rs. <%= offerTotal %></span>
							</div>
							
							<% if (categoryOffer > 0) { %>
								<div class="d-flex justify-content-between mb-3">
									<span>Category Discount (<%= categoryOffer %>%)</span>
									<span class="text-success">-â‚¹<%= categoryDiscountAmount %></span>
								</div>
							<% } %>

							<div class="detail-item">
								<span>Shipping</span>
								<% if(shipping===0) { %> <span class="free text-success">Free</span>
								<% } else {%> <span>Rs. <%= shipping %></span>
								<% } %>
							</div>
							
						</div>
						<hr />
						<div class="total-section">
							<div class="total-item">
								<span class="total-title">TOTAL</span>
								<span class="total-amount">Rs. <%= total %></span>
							</div>
							<div class="delivery-info">
								<span>Estimated Delivery by</span>
								<span class="delivery-date">01 Feb, 2023</span>
							</div>
						</div>
						
						
							<button class="checkout-btn mb-3 mt-3"><a href="/checkout">Proceed to Checkout</a></button>
						
					</div>

					
					<!-- Offer Section -->
					<div class="offer">
						<div class="offer-icon"></div>
						<p class="offer-text pt-3"> 10% Instant Discount with Federal Bank Debit Cards on a min
							spend of Rs. 999. TCA </p>
					</div>
				</div>
			</div>
		</div>
	</section>

    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
    <!------footer------->
    <%- include('./layout/FOOTER.ejs') %>
      <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
      
	  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
	  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script>
		document.querySelectorAll('.remove-btn').forEach(button => {
    button.addEventListener('click', async (e) => {
       
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "You want to remove this item from cart?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });

        if (result.isConfirmed) {
            const itemId = e.target.closest('button').getAttribute('data-item-id');
            const size = e.target.closest('.product-item').querySelector('.product-size').innerText.split(":")[1].trim();

            try {
                const response = await fetch('/cart/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId: itemId, size: size })
                });
                // console.log(JSON.stringify({ productId: itemId, size: size }));

                const result = await response.json();

                if (result.success) {
                    await Swal.fire({
                        title: 'Removed!',
                        text: 'Item has been removed from cart.',
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    window.location.reload();
                } else {
                    await Swal.fire({
                        title: 'Error!',
                        text: result.message || 'Failed to remove item.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    title: 'Error!',
                    text: 'There was an error removing the item.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    });
});
//==================================================================================>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.quantity-control').forEach(control => {
        const decreaseBtn = control.querySelector('.btn-decrease');
        const increaseBtn = control.querySelector('.btn-increase');
        const quantitySpan = control.querySelector('.quantity');
        const itemId = control.getAttribute('data-item-id');
        const size = control.closest('.product-item').querySelector('.product-size').innerText.split(":")[1].trim();

        decreaseBtn.addEventListener('click', () => updateQuantity(-1));
        increaseBtn.addEventListener('click', () => updateQuantity(1));

        async function updateQuantity(change) {
            const currentQuantity = parseInt(quantitySpan.textContent);
            const newQuantity = currentQuantity + change;

            if (newQuantity < 1) return;
			if(newQuantity>10) {
				return Swal.fire({
                    title: 'info!',
                    text: 'Cannot exceed more than 10 stock!',
                    icon: 'info',
                    confirmButtonText: 'OK'
                });
			}

			

            try {
                const response = await fetch('/cart/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        itemId,
                        size,
                        quantity: newQuantity
                    })
                });

				
				

                const result = await response.json();

                if (result.success) {
                    // Update quantity display
                    quantitySpan.textContent = newQuantity;
                    
                    // Update price displays
                    const orderSummary = document.querySelector('.order-summary');
                    if (orderSummary) {
                        const subtotalElement = orderSummary.querySelector('.detail-item:first-child span:last-child');
                        const shippingElement = orderSummary.querySelector('.detail-item:nth-child(3) span:last-child');
                        const totalElement = orderSummary.querySelector('.total-amount');

                        if (subtotalElement) subtotalElement.textContent = `Rs. ${result.newSubtotal}`;
                        if (shippingElement) {
                            if (result.shipping === 0) {
                                shippingElement.textContent = 'Free';
                                shippingElement.classList.add('text-success');
                            } else {
                                shippingElement.textContent = `Rs. ${result.shipping}`;
                            }
                        }
                        if (totalElement) totalElement.textContent = `Rs. ${result.total}`;
                    }
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: result.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to update quantity',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    });
});


//==================================================================================>


	</script>
	
</body>
</html>